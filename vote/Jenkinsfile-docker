pipeline {
  agent none

  stages{
      stage("build"){
          when{
              changeset "**/vote/**"
          }
          agent {
            docker {
              image 'python:3.7.12-slim'
              args '--user root'
            }
          }
          steps{
              echo 'Compiling vote app'
              dir('vote'){
                sh 'pip install -r requirements.txt'
              }
          }
      }
      stage("test"){
          when{
              changeset "**/vote/**"
          }
          agent {
            docker {
              image 'python:3.7.12-slim'
              args '--user root'
            }
          }
          steps{
              echo 'Running Unit Tets on vote app'
              dir('vote'){
                sh 'pip install -r requirements.txt'
                sh 'nosetests -v'
              }
          }
      }
      stage("docker-package"){
        agent any
        when{
            branch 'master'
            changeset "**/vote/**"
        }
        steps{
          echo 'Packaging vote app with docker'
          script{
            docker.withRegistry('https://index.docker.io/v1/','dockerlogin'){
              def voteImage = docker.build("xvag/instavote-vote:v${env.BUILD_ID}","./vote")
              voteImage.push()
              voteImage.push("${env.BRANCH_NAME}")
              voteImage.push("latest")
            }
          }
        }
      }
  }
  post{
    always{
        echo 'Building multibranch pipeline for vote is completed...'
    }
  }
}
